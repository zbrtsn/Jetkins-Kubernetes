pipeline {
    agent any

    environment {
        registryCredential = 'dockerhub-credentials' // DockerHub credentials stored in Jenkins. Create a credential with your dockerhub username and password to push there.
        GIT_REPO_URL = 'https://github.com/zbrtsn/basic-to-do-flask.git' // your github-gitlab repo url
        DOCKERHUB_REPO = 'pyouck/basic_todo_flask' // your dockerhub repo for pulling and pushing.
        KUBE_CONFIG = '/home/zub/.kube/config' // Adjust the path to your kubeconfig. OR you can create a credential kind secret file and upload your .kube/config file then add here. Like:
      //KUBECONFIG = credentials('kubeconfig-file') like this.
    }

    stages {
        stage('Clone Git Repository') {
            steps {
                git url: "${GIT_REPO_URL}", branch: 'latest'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dir('.') {
                        // Build the Docker image with --no-cache
                        sh 'docker build -t ${DOCKERHUB_REPO}:latest --no-cache .'
                    }
                    
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                script {
                    docker.withRegistry('', registryCredential) {
                        sh 'docker push ${DOCKERHUB_REPO}:latest'
                    }
                }
            }
        }

        stage('Update Kubernetes Deployment') {
            steps {
                sh 'kubectl delete -f /home/zub/ProgramFiles/b_flask/k8s/kind/kind-deployment.yaml --kubeconfig=${KUBE_CONFIG}' // first deleting it for not making any mistakes. You don't have to do that.
                sh 'kubectl apply -f /home/zub/ProgramFiles/b_flask/k8s/kind/kind-deployment.yaml --kubeconfig=${KUBE_CONFIG}'

            }
        }

        stage('Run Flask Application') {
            steps {
                sh 'kubectl delete -f /home/zub/ProgramFiles/b_flask/k8s/kind/kind-service.yaml --kubeconfig=${KUBE_CONFIG}'
                sh 'kubectl apply -f /home/zub/ProgramFiles/b_flask/k8s/kind/kind-service.yaml --kubeconfig=${KUBE_CONFIG}
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
